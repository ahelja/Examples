{\rtf1\mac\ansicpg10000\cocoartf805
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\info}\margl1440\margr1440\vieww9000\viewh10000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs24 \cf0 AXCanvas
\f1\b0 \
\
This application demonstrates how to make a Cocoa application accessible using the Cocoa Accessibility API. It shows how to accessorize existing views (see CanvasObjectViewAccessibility.m for an example), how to create proxy accessible elements (CanvasProxyTabView.m), and how to override existing accessible elements (see CanvasDocBorderView.m).\
\
See AccessibleViewKVCUtilities.m and AccessibleView.m for an overview of the accessibility key-value coding scheme used in the application. \
\
AXCanvas also makes heavy use of key-value observing and bindings to drive the user interface, especially to update views and manage the undo stack. See CanvasManagedUndoController.m for a detailed description of how to implement undo management using key-value observing.\
\
The accessibility implementation for text views is incomplete; specifically, the editing suite of attributes is not implemented for the canvas object field editor. Please watch Apple Developer Connection for a code sample that details how to implement this suite of attributes with field editors.}