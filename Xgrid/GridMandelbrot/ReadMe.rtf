{\rtf1\mac\ansicpg10000\cocoartf816
{\fonttbl\f0\fnil\fcharset77 LucidaGrande-Bold;\f1\fnil\fcharset77 LucidaGrande;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;}
{\info}\margl1440\margr1440\vieww11040\viewh9000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 GridMandelbrot Example\
\

\f1\b0\fs28 The 
\f0\b GridMandelbrot
\f1\b0  example demonstrates how one might take an existing single-computer application and factor out the computationally intensive portion and distribute it via Xgrid. The application allows users to browse for Xgrid controllers, connect to one, and begin using the controller's available resources to calculate portions of the Mandelbrot set. The results are displayed to the user as they are returned by Xgrid.\
\

\f0\b\fs36 Classes
\f1\b0\fs28 \
\

\f0\b GMApplicationDelegate
\f1\b0  is instantiated during loading of MainMenu.nib. The application delegate instantiates a 
\f0\b GMServiceBrowser
\f1\b0  instance and a 
\f0\b GMMainWindowController
\f1\b0  instance during nib loading. Once the application has finished loading the application delegate starts the service browser browsing, orders in the main window, and has the main window display the "Connect..." sheet. The application delegate itself acts as a delegate for instances of 
\f0\b GMConnectionController
\f1\b0  which are created by the main window controller following user interaction with the "Connect..." sheet
\f2\fs20 \CocoaLigature0 .
\f1\fs28 \CocoaLigature1 \
\

\f0\b GMServiceBrowser
\f1\b0  browses for Xgrid controller services. The service browser is key-value coding compliant for the "netServices" key, which returns an array of 
\f0\b NSNetService
\f1\b0  instances that can be used to resolve Xgrid controller services.\
\

\f0\b GMConnectionController
\f1\b0  handles connecting to an Xgrid controller service. Instances are created as a result of the user choosing a service or entering a hostname.\
\

\f0\b GMMainWindowController
\f1\b0  contains the core application logic. The main window controller takes user input, converts it into job specifications, submits the job specifications to the connected controller, retrieves the results, and displays the results as images.  Most of the UI controls are connected to the main window controller via Cocoa Bindings.\
}