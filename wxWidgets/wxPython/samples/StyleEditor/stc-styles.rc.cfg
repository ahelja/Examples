common.defs.msw={'helv': 'Lucida Console', 'mono': 'Courier New', 'lnsize': 6, 'backcol': '#FFFFFF', 'size': 8}
common.defs.gtk={ 'mono'  : 'Courier New', 'helv'  : 'Lucida Console', 'lucd'  : 'Lucida Console', 'other' : 'Comic Sans MS', 'size'  : 8, 'lnsize': 6, 'backcol': '#FFFFFF'}
common.styleidnames={wxSTC_STYLE_DEFAULT: 'Style default', wxSTC_STYLE_LINENUMBER: 'Line numbers', wxSTC_STYLE_BRACELIGHT: 'Matched braces', wxSTC_STYLE_BRACEBAD: 'Unmatched brace', wxSTC_STYLE_CONTROLCHAR: 'Control characters', wxSTC_STYLE_INDENTGUIDE: 'Indent guide'}
[style.python]
setting.python.-3=
setting.python.-2=fore:#000000
setting.python.-1=back:#88C4FF
style.python.000=fore:#808080
style.python.001=back:#E8FFE8,italic,fore:#007F00
style.python.002=fore:#007F7F
style.python.003=fore:#7F007F
style.python.004=fore:#7F007F
style.python.005=fore:#00007F,bold
style.python.006=fore:#7F0000
style.python.007=fore:#000033,back:#FFFFE8
style.python.008=fore:#0000FF,bold
style.python.009=fore:#007F7F,bold
style.python.010=bold
style.python.011=
style.python.012=fore:#7F7F7F,italic
style.python.013=fore:#000000,back:#E0C0E0,eolfilled
style.python.032=back:%(backcol)s,face:%(mono)s,size:%(size)d
style.python.033=size:%(lnsize)d,face:%(helv)s,back:#A0A0A0
style.python.034=fore:#0000FF,back:#FFFF88,bold
style.python.035=fore:#FF0000,back:#FFFF88,bold
style.python.036=
style.python.037=
[style.xml]
style.xml.001=bold,fore:#0000A0
style.xml.002=fore:#800000
style.xml.003=bold
style.xml.005=fore:#0000FF
style.xml.006=fore:#800080
style.xml.007=fore:#800080
style.xml.009=fore:#008000
style.xml.010=bold
style.xml.012=bold
style.xml.013=bold
style.xml.014=fore:#8000FF,bold
style.xml.017=fore:#808000
style.xml.018=bold
style.xml.032=face:%(mono)s,size:%(size)d
style.xml.033=size:%(lnsize)d
[style.html]
style.html.001=bold,fore:#0000A0
style.html.002=fore:#800000
style.html.003=bold
style.html.005=fore:#0000FF
style.html.006=fore:#800080
style.html.007=fore:#800080
style.html.009=fore:#008000
style.html.010=bold
style.html.012=bold
style.html.013=bold
style.html.014=fore:#8000FF,bold
style.html.017=fore:#808000
style.html.018=bold
style.html.032=face:%(mono)s,size:%(size)d
style.html.033=size:%(lnsize)d
[style.cpp]
setting.cpp.-3=fore:#8080FF
style.cpp.001=fore:#008040,back:#EAFFEA
style.cpp.002=fore:#008040,back:#EAFFEA,size:8
style.cpp.004=fore:#0076AE
style.cpp.005=bold,fore:#004080
style.cpp.006=fore:#800080
style.cpp.007=fore:#800040
style.cpp.009=fore:#808000
style.cpp.010=bold
style.cpp.012=back:#FFD5FF
style.cpp.013=fore:#8000FF
style.cpp.032=face:%(mono)s
style.cpp.033=size:%(lnsize)s
style.cpp.034=fore:#0000FF,back:#FFFFB9,bold
style.cpp.035=fore:#FF0000,back:#FFFFB9,bold
[style.prop]
style.prop.000=fore:#000080
style.prop.001=fore:#008000,back:#DDFFDD
style.prop.002=bold
style.prop.003=bold,fore:#804000
style.prop.004=fore:#800000
style.prop.032=size:7
[style.text]
style.text.032=size:7

[style.python.default]
setting.python.-2=fore:#000000
setting.python.-1=fore:#000000,back:#88C4FF
style.python.000=fore:#808080
style.python.001=fore:#007F00,back:#E8FFE8,italic
style.python.002=fore:#007F7F
style.python.003=fore:#7F007F
style.python.004=fore:#7F007F
style.python.005=fore:#00007F,bold
style.python.006=fore:#7F0000
style.python.007=fore:#000033,back:#FFFFE8
style.python.008=fore:#0000FF,bold
style.python.009=fore:#007F7F,bold
style.python.010=bold
style.python.012=fore:#7F7F7F,italic
style.python.013=fore:#000000,back:#E0C0E0,eolfilled
style.python.032=back:%(backcol)s,face:%(mono)s,size:%(size)d
style.python.033=size:%(lnsize)d,face:%(helv)s,back:#A0A0A0
style.python.034=fore:#0000FF,back:#FFFF88,bold
style.python.035=fore:#FF0000,back:#FFFF88,bold

[style.python.classic]
setting.python.-2=fore:#FFFFFF
setting.python.-1=fore:#000000,back:#888888
style.python.000=fore:#808080
style.python.001=fore:#00FF00,italic
style.python.002=fore:#00FFFF
style.python.003=fore:#FF00FF
style.python.004=fore:#FF00FF
style.python.005=fore:#FFFFFF,bold
style.python.006=fore:#FFB7B7
style.python.007=fore:#D1D1D1
style.python.008=fore:#79BCFF,bold
style.python.009=fore:#FFFFB9,bold
style.python.010=bold,fore:#FFFFFF
style.python.012=fore:#949494,italic
style.python.013=fore:#000000,back:#CA8BE4,eolfilled
style.python.032=back:#000080,face:%(mono)s,size:%(size)d,fore:#FFFF00
style.python.033=size:%(lnsize)d,face:%(helv)s,back:#A0A0A0,fore:#000000
style.python.034=fore:#0000FF,back:#FFFF88,bold
style.python.035=fore:#FF0000,back:#FFFF88,bold

[style.python.twilight]
setting.python.-2=fore:#FFFFFF
setting.python.-1=fore:#000000,back:#888888
style.python.000=fore:#808080
style.python.001=fore:#A0A0A0,italic
style.python.002=fore:#FF00FF
style.python.003=fore:#FFFF00
style.python.004=fore:#FFFF00
style.python.005=fore:#80FFFF,bold
style.python.006=fore:#00C1C1
style.python.007=fore:#00C1C1
style.python.008=fore:#FFFF00,bold
style.python.009=fore:#FFFFFF,bold
style.python.010=bold,fore:#80FFFF
style.python.012=fore:#A0A0A0,italic
style.python.013=fore:#000000,back:#959500,eolfilled
style.python.032=back:#000000,face:%(mono)s,size:%(size)d,fore:#FFFFFF
style.python.033=size:%(lnsize)d,face:%(helv)s,back:#A0A0A0,fore:#000000
style.python.034=fore:#0000FF,back:#80FFFF,bold
style.python.035=fore:#FF0000,back:#80FFFF,bold

[style.python.idle]
setting.python.-1=fore:#FFFFFF,back:#0000A0
style.python.001=fore:#DD0000
style.python.003=fore:#00AA00
style.python.004=fore:#00AA00
style.python.005=fore:#FF7700
style.python.006=fore:#00AA00
style.python.007=fore:#00AA00
style.python.008=fore:#0000FF
style.python.009=fore:#0000FF
style.python.012=fore:#DD0000
style.python.032=face:%(mono)s,size:%(size)d
style.python.033=size:%(lnsize)d,face:%(helv)s,back:#A0A0A0
style.python.034=fore:#0000FF,bold
style.python.035=fore:#DD0000,bold

[style.html.default]
style.html.001=bold,fore:#0000A0
style.html.002=fore:#800000
style.html.003=bold
style.html.005=fore:#0000FF
style.html.006=fore:#800080
style.html.007=fore:#800080
style.html.009=fore:#008000
style.html.010=bold
style.html.012=bold
style.html.013=bold
style.html.014=fore:#8000FF,bold
style.html.017=fore:#808000
style.html.018=bold
style.html.032=face:%(mono)s,size:%(size)d
style.html.033=size:%(lnsize)d

[style.xml.default]
style.html.001=bold,fore:#0000A0
style.html.002=fore:#800000
style.html.003=bold
style.html.005=fore:#0000FF
style.html.006=fore:#800080
style.html.007=fore:#800080
style.html.009=fore:#008000
style.html.010=bold
style.html.012=bold
style.html.013=bold
style.html.014=fore:#8000FF,bold
style.html.017=fore:#808000
style.html.018=bold
style.html.032=face:%(mono)s,size:%(size)d
style.html.033=size:%(lnsize)d

[style.cpp.default]
style.cpp.001=fore:#008040,back:#EAFFEA
style.cpp.002=fore:#008040,back:#EAFFEA,size:8
style.cpp.004=fore:#0076AE
style.cpp.005=bold,fore:#004080
style.cpp.006=fore:#800080
style.cpp.009=fore:#808000
style.cpp.010=bold
style.cpp.012=back:#FFD5FF
style.cpp.032=face:%(mono)s
style.cpp.033=size:%(lnsize)s
style.cpp.034=fore:#0000FF,back:#FFFFB9,bold
style.cpp.035=fore:#FF0000,back:#FFFFB9,bold

[style.prop.default]
style.prop.000=fore:#000080
style.prop.001=fore:#008000,back:#DDFFDD
style.prop.002=bold
style.prop.003=bold,fore:#804000
style.prop.004=fore:#800000
style.prop.032=size:7

[style.text.default]

[python]
displaysrc=## Comment Blocks!\nclass MyClass(MyParent):\n    """ Class example """\n    def __init__(self):\n        ''' Triple quotes '''\n        # Do something silly\n        a = ('Py' + "thon") * 100\n        b = 'EOL unclosed string\n        c = [Matched braces]\n        d = {Unmatched brace
braces={'good': (9, 12), 'bad': (10, 12)}
styleidnames={wxSTC_P_DEFAULT: 'Default', wxSTC_P_COMMENTLINE: 'Comment', wxSTC_P_NUMBER : 'Number', wxSTC_P_STRING : 'String', wxSTC_P_CHARACTER: 'Single quoted string', wxSTC_P_WORD: 'Keyword', wxSTC_P_TRIPLE:'Triple quotes', wxSTC_P_TRIPLEDOUBLE: 'Triple double quotes', wxSTC_P_CLASSNAME: 'Class definition', wxSTC_P_DEFNAME: 'Function or method', wxSTC_P_OPERATOR: 'Operators', wxSTC_P_IDENTIFIER: 'Identifiers', wxSTC_P_COMMENTBLOCK: 'Comment blocks', wxSTC_P_STRINGEOL: 'EOL unclosed string'}
lexer=wxSTC_LEX_PYTHON
keywords=and assert break class continue def del elif else except exec finally for from global if import in is lambda not or pass print raise return try while

[html]
displaysrc=<?xml version="1.0"?>\n<html><head>\n  <title>STC Style Editor</title>\n  <script lang='Python'> a=10 </script>\n </head>\n <body bgcolor="#FFFFFF" text=#000000>\n    &lt; Text for testing &gt;\n    <unknown_tag>\n    <!--Comments--><?question?><![CDATA[]]>\n </body>\n</html>
braces={}
keywords=a abbr acronym address applet area b base basefont bdo big blockquote body br button caption center cite code col colgroup dd del dfn dir div dl dt em fieldset font form frame frameset h1 h2 h3 h4 h5 h6 head hr html i iframe img input ins isindex kbd label legend li link map menu meta noframes noscript object ol optgroup option p param pre q s samp script select small span strike strong style sub sup table tbody td textarea tfoot th thead title tr tt u ul var xmlns abbr accept-charset accept accesskey action align alink alt archive axis background bgcolor border cellpadding cellspacing char charoff charset checked cite class classid clear codebase codetype color cols colspan compact content coords data datafld dataformatas datapagesize datasrc datetime declare defer dir disabled enctype face for frame frameborder headers height href hreflang hspace http-equiv id ismap label lang language link longdesc marginwidth marginheight maxlength media method multiple name nohref noresize noshade nowrap object onblur onchange onclick ondblclick onfocus onkeydown onkeypress onkeyup onload onmousedown onmousemove onmouseover onmouseout onmouseup onreset onselect onsubmit onunload profile prompt readonly rel rev rows rowspan rules scheme scope shape size span src standby start style summary tabindex target text title type usemap valign value valuetype version vlink vspace width text password checkbox radio submit reset file hidden image public !doctype
lexer=wxSTC_LEX_HTML
styleidnames={wxSTC_H_DEFAULT: 'Default', wxSTC_H_TAG: 'Tag', wxSTC_H_TAGUNKNOWN: 'Tag unknown', wxSTC_H_ATTRIBUTE: 'Attribute', wxSTC_H_NUMBER: 'Number', wxSTC_H_DOUBLESTRING: 'Double string', wxSTC_H_SINGLESTRING:'Single string', wxSTC_H_OTHER: 'Other', wxSTC_H_COMMENT: 'Comment', wxSTC_H_ENTITY: 'Entity', wxSTC_H_TAGEND: 'Tag end', wxSTC_H_XMLSTART: 'XML start', wxSTC_H_XMLEND: 'XML End', wxSTC_H_SCRIPT: 'Script', wxSTC_H_ASP: 'ASP', wxSTC_H_ASPAT: 'ASPAT', wxSTC_H_CDATA: 'CDATA', wxSTC_H_QUESTION: 'Question', wxSTC_H_VALUE: 'Value', wxSTC_HJ_START: 'JS - Start',wxSTC_HJ_DEFAULT: 'JS - Default',wxSTC_HJ_COMMENT: 'JS - Comment',wxSTC_HJ_COMMENTLINE: 'JS - Comment line',wxSTC_HJ_COMMENTDOC : 'JS - Comment doc',wxSTC_HJ_NUMBER: 'JS - Number',wxSTC_HJ_WORD: 'JS - Word',wxSTC_HJ_KEYWORD: 'JS - Keyword',wxSTC_HJ_DOUBLESTRING: 'JS - String',wxSTC_HJ_SINGLESTRING: 'JS - Single quoted string',wxSTC_HJ_SYMBOLS: 'JS - Symbol',wxSTC_HJ_STRINGEOL: 'JS - EOL unclosed string', wxSTC_HPHP_DEFAULT: 'HP - Default', wxSTC_HPHP_HSTRING: 'HP - String', wxSTC_HPHP_SIMPLESTRING: 'HP - Simple string', wxSTC_HPHP_WORD: 'HP - Word', wxSTC_HPHP_NUMBER: 'HP - Number', wxSTC_HPHP_VARIABLE: 'HP - Variable', wxSTC_HPHP_COMMENT: 'HP - Comment', wxSTC_HPHP_COMMENTLINE: 'HP - Comment line', wxSTC_HPHP_STRINGEOL: 'HP - EOL unclosed string', wxSTC_HP_START: 'Py - Start', wxSTC_HP_DEFAULT: 'Py - Default', wxSTC_HP_COMMENTLINE: 'Py - Comment line', wxSTC_HP_NUMBER: 'Py - Number', wxSTC_HP_STRING: 'Py - String', wxSTC_HP_CHARACTER: 'Py - Single quoted string', wxSTC_HP_WORD: 'Py - Keyword', wxSTC_HP_TRIPLE: 'Py - Triple quotes', wxSTC_HP_TRIPLEDOUBLE: 'Py - Triple double quotes', wxSTC_HP_CLASSNAME: 'Py - Class definition', wxSTC_HP_DEFNAME: 'Py - Function or method', wxSTC_HP_OPERATOR: 'Py - Operator', wxSTC_HP_IDENTIFIER: 'Py - Identifier'}

[xml]
displaysrc=<?xml version = "1.0"?>\n<!DOCTYPE ADDRBOOK SYSTEM "addr_book.dtd">\n<ADDRBOOK>\n    <ENTRY ID="gn">\n        <NAME>Gegbefuna Nwannem</NAME>\n        <ADDRESS>666 Murtala Mohammed Blvd.</ADDRESS>\n        <PHONENUM DESC="Home">999-101-1001</PHONENUM>\n        <EMAIL>nwanneg@naija.ng</EMAIL>\n    </ENTRY>\n</ADDRBOOK>
braces={}
keywords=a abbr acronym address applet area b base basefont bdo big blockquote body br button caption center cite code col colgroup dd del dfn dir div dl dt em fieldset font form frame frameset h1 h2 h3 h4 h5 h6 head hr html i iframe img input ins isindex kbd label legend li link map menu meta noframes noscript object ol optgroup option p param pre q s samp script select small span strike strong style sub sup table tbody td textarea tfoot th thead title tr tt u ul var xmlns abbr accept-charset accept accesskey action align alink alt archive axis background bgcolor border cellpadding cellspacing char charoff charset checked cite class classid clear codebase codetype color cols colspan compact content coords data datafld dataformatas datapagesize datasrc datetime declare defer dir disabled enctype face for frame frameborder headers height href hreflang hspace http-equiv id ismap label lang language link longdesc marginwidth marginheight maxlength media method multiple name nohref noresize noshade nowrap object onblur onchange onclick ondblclick onfocus onkeydown onkeypress onkeyup onload onmousedown onmousemove onmouseover onmouseout onmouseup onreset onselect onsubmit onunload profile prompt readonly rel rev rows rowspan rules scheme scope shape size span src standby start style summary tabindex target text title type usemap valign value valuetype version vlink vspace width text password checkbox radio submit reset file hidden image public !doctype
lexer=wxSTC_LEX_XML
styleidnames={wxSTC_H_DEFAULT: 'Default', wxSTC_H_TAG: 'Tag', wxSTC_H_TAGUNKNOWN: 'Tag unknown', wxSTC_H_ATTRIBUTE: 'Attribute', wxSTC_H_NUMBER: 'Number', wxSTC_H_DOUBLESTRING: 'Double quoted string', wxSTC_H_SINGLESTRING:'Single quoted string', wxSTC_H_OTHER: 'Other inside tag', wxSTC_H_COMMENT: 'Comment', wxSTC_H_ENTITY: 'Entity', wxSTC_H_TAGEND: 'Tag end', wxSTC_H_XMLSTART: 'XML start', wxSTC_H_XMLEND: 'XML End'}

[cpp]
displaysrc=#include <wx/tokenzr.h>\n// Extract style settings from a spec-string\nvoid wxStyledTextCtrl::StyleSetSpec(int styleNum, const wxString& spec) {\n    wxStringTokenizer tkz(spec, ',');\n    while (tkz.HasMoreTokens() || 42) {\n        wxString token = tkz.GetNextToken();\n        wxString option = token.BeforeFirst(':');\n        wxString val = token.AfterFirst(':');\n        if (option == "bold")\n            StyleSetBold(styleNum, true);\n/* End of code snippet */ @"Verbatim" "   \n
braces={'good': (5, 10), 'bad': (5, 38)}
keywords=asm auto bool break case catch char class const const_cast continue default delete do double dynamic_cast else enum explicit export extern false float for friend goto if inline int long mutable namespace new operator private protected public register reinterpret_cast return short signed sizeof static static_cast struct switch template this throw true try typedef typeid typename union unsigned using virtual void volatile wchar_t while
lexer=wxSTC_LEX_CPP
styleidnames={wxSTC_C_DEFAULT: 'Default', wxSTC_C_COMMENT: 'Comment',wxSTC_C_COMMENTLINE: 'Comment line',wxSTC_C_COMMENTDOC: 'Comment doc',wxSTC_C_NUMBER: 'Number',wxSTC_C_WORD: 'Keyword',wxSTC_C_STRING: 'String',wxSTC_C_CHARACTER: 'Character',wxSTC_C_UUID: 'UUID',wxSTC_C_PREPROCESSOR: 'Preprocessor',wxSTC_C_OPERATOR: 'Operator', wxSTC_C_IDENTIFIER: 'Identifier', wxSTC_C_STRINGEOL: 'EOL unclosed string', wxSTC_C_VERBATIM: 'Verbatim'}

[prop]
displaysrc=# The property's properties\n[prop]\ndisplaysrc=# The property's properties ...\nbraces={}\nkeywords=\nlexer=wxSTC_LEX_PROPERTIES\n\n; Section with a default value\n[section]\n@default=42
braces={}
keywords=
lexer=wxSTC_LEX_PROPERTIES
styleidnames={0: 'Default', 1: 'Comment', 2: 'Section', 3: 'Assignment operator', 4:'Default value'}

[text]
displaysrc=Text uses the NULL lexer, so there\naren't really language spesific styles to set.\nOnly the default styles makes sense.
braces={}
keywords=
lexer=wxSTC_LEX_NULL
styleidnames={0: 'Default'}
